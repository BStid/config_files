################################################################################
##			  													JSX       															  ##
################################################################################
 '.source.jsx':

   'div':
     'prefix': 'div'
     'body': '
		 					<div class="$1">$2</div>
             '
   'input':
     'prefix': 'input'
     'body': """
		 					<input>$1</input>
             """
   'textarea':
     'prefix': 'textarea'
     'body': """
		 					<textarea>$1</textarea>
             """
   'p':
     'prefix': 'p'
     'body': """
		 					<p>$1</p>
             """
   'ul':
     'prefix': 'ul'
     'body': """
		 					<ul>
                $1
              </ul>
             """
   'li':
     'prefix': 'li'
     'body': """
		 					<li>$1</li>
             """
   'button':
     'prefix': 'button'
     'body': """
		 					<button type="button">$1</button>
             """
   'Anonymous Function':
     'prefix': 'anon'
     'body': """
function( $1 ){
	return
}
             """

   'Arrow Function':
     'prefix': 'anon'
     'body': """
( $1 ) => {
	return
}
             """

   'require':
     'prefix': 'req'
     'body': '
const $1 = require( "$2" )
             '


   '.then':
     'prefix': 'then'
     'body': """
             .then((response) => {
               $1
             })
             """


			# catch
			# ============================================================
   '.catch':
     'prefix': 'catch'
     'body': """
             .catch((response) => {
               $1
             })
             """

################################################################################
##			  													JavaScript															  ##
################################################################################
 '.source.js':



   'Anonymous Function':
     'prefix': 'anon'
     'body': """
function( $1 ){
	return
}
             """

   'Arrow Function':
     'prefix': 'anon'
     'body': """
( $1 ) => {
	return
}
             """

   'require':
     'prefix': 'req'
     'body': '
const $1 = require( "$2" )
             '


   '.then':
     'prefix': 'then'
     'body': """
             .then((response) => {
               $1
             })
             """


			# catch
			# ============================================================
   '.catch':
     'prefix': 'catch'
     'body': """
             .catch((response) => {
               $1
             })
             """


   # EXPRESS SERVER SNIPPET
   # ============================================================

   'Express Server':
     'prefix': 'express'
     'body': """
const   express = require('express')
 				, cors = require('cors')
 				, bodyParser = require('body-parser')
 				, port = 3000
 				, app = express()
//				, serverConfig = require("./serverConfig")
//				, session = require("express-session")

// app.use(session(serverConfig.session) );
app.use(cors())
app.use(bodyParser.json())
app.use("/", express.static(__dirname + '/public'));



app.listen(port, function() {
  console.log('Server listening on port', port)
})
"""


			# End points
			# ============================================================
   'Endpoints':
     'prefix': 'end'
     'body': """
             app.get('/$1', $2Ctrl.read)
             app.post('/$3', $2Ctrl.create)
             app.put('/$5/:id', $2Ctrl.update)
             app.delete('/$7/:id', $2Ctrl.delete)
             $9
             """

		 # ANGULAR SNIPPETS
	   # ============================================================

	   'ngApp' :
	     'prefix': 'ngApp'
	     'body': """
	             angular.module("$1", [])
	             """


			# ngApp w/ Router
			# ============================================================
			'ngRoute' :
 	     'prefix': 'ngRoute'
 	     'body': """
angular.module("app", ['ui.router'])
.config( ( $stateProvider, $urlRouterProvider ) => {

	/* Set home route */
	$urlRouterProvider.otherwise( "/" );
	$stateProvider
	.state( "$1", {
			url: "/$1"
		, templateUrl: `./$1Tmpl.html`
		, controller : $1Ctrl
	} )
} )
 	             """

			# uiState
	    # ============================================================

			'uiState' :
 	     'prefix': 'uiState'
 	     'body': """
.state( "$1", {
		url: "/$1"
	, templateUrl: `./$1Tmpl.html`
	, controller : $1Ctrl
} )
 	             """



			# ngController
			# ============================================================
			'ngController' :
 	     'prefix': 'ngController'
 	     'body': """
angular.module("$1").controller("$2Ctrl", function($scope){
	$scope.test = "Get to tha Choppa!"
})
 	             """

			# ngService
			# ============================================================
			'ngService' :
 	     'prefix': 'ngService'
 	     'body': """
angular.module("app").service("$1Service", function($http){
	this.test = "Service Test"
})
 	             """

			# ngDirective
			# ============================================================
			'ngDirective' :
 	     'prefix': 'ngDirective'
 	     'body': """
angular.module("app").directive("$1Directive", function() {
  return {
     template: ""
    , scope: {
    }
		, controller: function($scope){

		}
		, link: function(scope, element, attrs) {

		}
  }
})
 	             """

			# ngComponent
			# ============================================================
			'ngComponent' :
 	     'prefix': 'ngComponent'
 	     'body': """
angular.module('app').component('$1Component', {
  templateUrl: '$2',
  controller: $3,
  bindings: {
    $4
  }
});
 	             """




			# ngFactory
			# ============================================================
			'ngFactory' :
 	     'prefix': 'ngFactory'
 	     'body': """
angular.module("app").factory("$1Factory", function($http){
	return {
		test: "Factory Test"
	}
})
 	             """

			# $http.get
			# ============================================================
			'http.get' :
 	     'prefix': 'http.get'
 	     'body': """
return $http.get("/$1").then(function(response){
	// console.log(response);
	return response;
})
 	             """
			# $http.post
			# ============================================================
			'http.post' :
 	     'prefix': 'http.post'
 	     'body': """
return $http.post("/$1", {}).then(function(response){
	// console.log(response);
	return response;
})
 	             """
			# $http.put
			# ============================================================
			'http.put' :
 	     'prefix': 'http.put'
 	     'body': """
return $http.put("/$1", {}).then(function(response){
	// console.log(response);
	return response;
})
 	             """

################################################################################
##			  													HTML																		  ##
################################################################################

 '.text.html, .text.html .meta.scope.between-tag-pair, .text.html .punctuation.tag.begin':

 #######################
 ## Links and Scripts ##
 #######################
   'Angular Src':
     'prefix': 'angular'
     'body': """
             	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.3/angular.js"></script>
             """
   'Vue Src':
     'prefix': 'vue'
     'body': """
             	<script src="https://unpkg.com/vue"></script>
             """

   'Angular UI':
     'prefix': 'UI'
     'body': """
             	<script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.4.2/angular-ui-router.js"></script>
             """

   'bootstrap css':
     'prefix': 'bootstrapcss'
     'body': """
             	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.css" ></link>
             """

   'bootstrap js':
     'prefix': 'bootstrapjs'
     'body': """
             	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.js"></script>
             """

   'materialize css':
     'prefix': 'materializecss'
     'body': """
             	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.98.1/css/materialize.css">
             """

   'materialize js':
     'prefix': 'materializejs'
     'body': """
             	  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.98.1/js/materialize.js"></script>

             """

   'jquery':
     'prefix': 'jquery'
     'body': """
             	  <script src="https://code.jquery.com/jquery-3.2.1.js"	   integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE="	   crossorigin="anonymous"></script>
             """



# Modal
# ============================================================
   'modal template':
     'prefix': 'modal'
     'body': """
             <div class="overlay">
             </div>
             <div class="fade"></div>
             """


# HTML Boilerplate
# ============================================================
   'HTML Boilerplate':
     'prefix': 'html'
     'body': """
<!DOCTYPE html>
<html>
 <head>
   <meta charset="utf-8">
      <!-- Uncomment this to reload favicon -->
      <!-- <link rel="shortcut icon" href="./favicon.ico?v=1"> -->
 			<!-- Mobile Specific Metas ------------------------------------------------>
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"/>
   <title>$1</title>
 </head>
 <body>
	<!--<ui-view></ui-view>--->


</body>
</html>
             """


###############
## Html tags ##
###############
   'script':
     'prefix': 'script'
     'body': """
		 <script src="$1">$2</script>
		 """

   'button':
     'prefix': 'button'
     'body': """
		 <button type="button" name="button">${3:Submit}</button>
		 """

   'div':
     'prefix': 'div'
     'body': """
			<div class="$1">
				$2
			</div>
		 """

   'li':
     'prefix': 'li'
     'body': """
			<li class="$1"> $2 </li>
		 """

   'ul':
     'prefix': 'ul'
     'body': """
			<ul class="$1">
				$2
			</ul>
		 """

   'link':
     'prefix': 'link'
     'body': """
			<link rel="stylesheet" href="/${1:styles}.css">
		 """

   'p':
     'prefix': 'p'
     'body': """
			<p>$1</p>
		 """

################################################################################
##			  													CSS																			  ##
################################################################################

 '.source.css':
   'modal classes':
     'prefix': 'modal'
     'body': """
             /*------------------------------------*\\\\
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
               #MODAL OVERLAY
             \\\\*------------------------------------*/
             .overlay {
               color: black;
               position: fixed
               top: 50%
               left: 50%
               transform: translate(-50%, -50%)
               padding: 25px;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               background-color: #ffffff;
               z-index: 100;
               overflow: auto;
               border-radius: 3px;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
               border: 1px solid #C0C3C5;
             }
             /*------------------------------------*\\\\
               #MODAL FADE
             \\\\*------------------------------------*/
             .fade {
               position: fixed;
               left: 0%;
               top: 0%;
               background-color: black;
               -moz-opacity: 0.7;
               opacity: .70;
               filter: alpha(opacity=70);
               width: 100%;
               height: 100%;
               z-index: 99;
             }
             """



################################################################################
##			  													TypeScript															  ##
################################################################################
 '.source.ts':

# placeHolder
# ============================================================

   'consolelogger':
     'prefix': 'log'
     'body': """
				console.log( $1 );
		 """
   'Anonymous Function':
     'prefix': 'anon'
     'body': """
function( $1 ){
	return $2
}
             """

   'Arrow Function':
     'prefix': 'anon'
     'body': """
( $1 ) => {
	return
}
             """

   'require':
     'prefix': 'req'
     'body': '
const $1 = require( "$2" )
             '


   '.then':
     'prefix': 'then'
     'body': """
             .then((response) => {
               $1
             })
             """


			# catch
			# ============================================================
   '.catch':
     'prefix': 'catch'
     'body': """
             .catch((response) => {
               $1
             })
             """
